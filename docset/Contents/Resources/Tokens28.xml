<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/NOZEncoder.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/NOZEncoder</TokenIdentifier>
			<Abstract type="html">Protocol to implement for constructing a compression encoder.</Abstract>
			<DeclaredIn>NOZEncoder.h</DeclaredIn>
            
			
			<NodeRef refid="28"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NOZEncoder/bitFlagsForEntry:</TokenIdentifier>
			<Abstract type="html">Return any bit flags related to the given entry for hinting at the compression that will be used.</Abstract>
			<DeclaredIn>NOZEncoder.h</DeclaredIn>
			
			<Declaration>- (UInt16)bitFlagsForEntry:(nonnull id&lt;NOZZipEntry&gt;)entry</Declaration>
			
			
			<Anchor>//api/name/bitFlagsForEntry:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NOZEncoder/createContextWithBitFlags:compressionLevel:flushCallback:</TokenIdentifier>
			<Abstract type="html">Create a new context object to track the encoding process.</Abstract>
			<DeclaredIn>NOZEncoder.h</DeclaredIn>
			
			<Declaration>- (nonnull id&lt;NOZEncoderContext&gt;)createContextWithBitFlags:(UInt16)bitFlags compressionLevel:(NOZCompressionLevel)level flushCallback:(nonnull NOZFlushCallback)callback</Declaration>
			<Parameters>
				<Parameter>
					<Name>level</Name>
					<Abstract type="html">The level of compression requested</Abstract>
				</Parameter><Parameter>
					<Name>callback</Name>
					<Abstract type="html">The NOZFlushCallback that will be used to output the compressed data</Abstract>
				</Parameter><Parameter>
					<Name>flags</Name>
					<Abstract type="html">The bit flags that were specefied for this encoder.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the new context object</Abstract></ReturnValue>
			<Anchor>//api/name/createContextWithBitFlags:compressionLevel:flushCallback:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NOZEncoder/initializeEncoderContext:</TokenIdentifier>
			<Abstract type="html">Initialize the encoding process.
Call this first for each encoding process.
If it succeeds, be sure to pair it with a call to finalizeEncoderContext:.</Abstract>
			<DeclaredIn>NOZEncoder.h</DeclaredIn>
			
			<Declaration>- (BOOL)initializeEncoderContext:(nonnull id&lt;NOZEncoderContext&gt;)context</Declaration>
			
			
			<Anchor>//api/name/initializeEncoderContext:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NOZEncoder/encodeBytes:length:context:</TokenIdentifier>
			<Abstract type="html">Encode the provided byte buffer.
Call this as many times as necessary to get all bytes of a source encoded
(or until a failure occurs).</Abstract>
			<DeclaredIn>NOZEncoder.h</DeclaredIn>
			
			<Declaration>- (BOOL)encodeBytes:(nonnull const Byte *)bytes length:(size_t)length context:(nonnull id&lt;NOZEncoderContext&gt;)context</Declaration>
			
			
			<Anchor>//api/name/encodeBytes:length:context:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NOZEncoder/finalizeEncoderContext:</TokenIdentifier>
			<Abstract type="html">Finalize the encoding process.</Abstract>
			<DeclaredIn>NOZEncoder.h</DeclaredIn>
			
			<Declaration>- (BOOL)finalizeEncoderContext:(nonnull id&lt;NOZEncoderContext&gt;)context</Declaration>
			
			
			<Anchor>//api/name/finalizeEncoderContext:</Anchor>
            <NodeRef refid="28"/>
		</Token>
		
        
        
	</File>
</Tokens>